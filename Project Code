import pandas as pd
import numpy as np
import sklearn.linear_model
import sklearn.model_selection
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from tensorflow.keras.layers import Dense, InputLayer
from sklearn.metrics import accuracy_score, f1_score
from tensorflow.keras.models import Sequential
from sklearn.preprocessing import StandardScaler
df = pd.DataFrame(data.iloc[:,0:8])
df.dtypes
df.Date
df.Date=pd.to_datetime(df.Date)
df['weekday'] = df.Date.dt.weekday
df['month'] = df.Date.dt.month
df['year'] = df.Date.dt.year
del df['Date']
df.head()
df.isnull().values.any()


X = data[['Store', 'Date', 'Holiday_Flag', 'Temperature', 'Fuel_Price', 'CPI', 'Unemployment']] #features
y = data ['Weekly_Sales'] #target variable. 

data_list = np.array(data['Weekly_Sales']).reshape(-1,1)

scaler = StandardScaler()
scaler.fit(data_list)
data_scaled = scaler.transform(data_list)
print(data_scaled)

import matplotlib.pyplot as plt

plt.scatter(data['Fuel_Price'],data_scaled)
plt.title('Weekly Sales affected by Fuel Prices')
plt.xlabel('Fuel Prices ')
plt.ylabel('Weekly Sales')
plt.show()

plt.scatter(data['Temperature'],data_scaled)
plt.title('Weekly Sales being affected by Temperature')
plt.xlabel('Temperature ')
plt.ylabel('Weekly Sales')
plt.show()

plt.scatter(data['Unemployment'],data_scaled)
plt.title('Weekly Sales with Unemployment rate')
plt.xlabel('Unemployment ')
plt.ylabel('Weekly Sales')
plt.show()

plt.bar(data['Store'],data['Weekly_Sales'], color = 'green')
plt.title('Weekly Sales in different Stores')
plt.xlabel('Store Number')
plt.ylabel('Weekly Sales')
plt.show()

plt.bar(data['Holiday_Flag'],data['Weekly_Sales'])
plt.title('Weekly Sales during Holidays vs Regular days')
plt.xlabel('Holiday Flag')
plt.ylabel('Weekly Sales')
plt.show()

plt.scatter(data['CPI'],data_scaled)
plt.title('Weekly Sales with CPI')
plt.xlabel('CPI ')
plt.ylabel('Weekly Sales')
plt.show()

import sklearn
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

model = LinearRegression()
X = data[[ 'Temperature', 'Fuel_Price', 'CPI', 'Unemployment']]
y = data [['Weekly_Sales']]

X_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.3)

print('Training Feature Size :- ', X_train.shape )
print('Training Label Size :- ', y_train.shape )
print('Testing Feature Size :- ', X_test.shape )
print('Testing Label Size :- ', y_test.shape )

model.fit(X_train, y_train)
y_predict = model.predict(X_test)

print(y_predict)

print('Intercept: \n', model.intercept_)
print('Coefficients: \n', model.coef_)

from sklearn.metrics import accuracy_score
model.score(X_test, y_test)


##or for model linear regreesion 
y = df.Weekly_Sales 
X = df.loc[:, df.columns!= 'Weekly_Sales']
model_1 = LinearRegression(fit_intercept=False)
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.7)
model_1.fit(X_train,y_train)
y_predict = model_1.predict(X_test)
y_predict
